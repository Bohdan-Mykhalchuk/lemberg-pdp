name: Code Analysis

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [ develop ]

env:
  COMPOSER_FLAGS: '--ansi --no-interaction --no-progress --no-suggest --prefer-dist'
  CODECOV_TOKEN: ${{ secrets.ci_codecov_token }}

jobs:
  phpstan:
    name: 'Code Analysis'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version:
          - '8.3'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v2'

      - name: 'Install Composer dependencies'
        run: composer install $COMPOSER_FLAGS

      - name: 'PHPStan Analyse'
        run: vendor/bin/phpstan analyse --configuration=phpstan.neon

      - name: 'Check drupal coding standards for custom modules'
        run: vendor/bin/phpcs --standard="Drupal,DrupalPractice" --extensions="php,module,inc,install,test,profile,theme,info,yml" --ignore="/node_modules/" web/modules/custom/

      - name: 'Check drupal coding standards for custom themes'
        run: vendor/bin/phpcs --standard="Drupal,DrupalPractice" --extensions="php,module,inc,install,test,profile,theme,info,yml" --ignore="/node_modules/" web/themes/custom/


#  phpunit:
#    name: 'PHPUnit'
#    runs-on: ubuntu-latest
#    needs:
#      - phpstan
#      - phpcs
#    steps:
#      - name: 'Checkout'
#        uses: 'actions/checkout@v2'
#
#      - name: 'Copy files for environment'
#        run: |
#          cp ./.github/workflows/d4d-phpunit/.env ./.env
#          cp ./.github/workflows/d4d-phpunit/docker-compose.yml ./docker-compose.yml
#          cp ./.github/workflows/d4d-phpunit/settings.php ./web/sites/default/settings.php
#          mkdir -p ./web/sites/default/files/druki-content-source
#
#      - name: 'Run docker'
#        run: "docker-compose up -d"
#
#      - name: 'Install site dependencies'
#        run: "docker-compose exec -T php composer install"
#
#      - name: 'Install website'
#        run: 'docker-compose exec -T php drush site:install druki_installer'
#
#      - name: 'Run tests'
#        run: 'docker-compose exec -T php ./vendor/bin/phpunit --coverage-clover coverage.xml --coverage-text'
#
#      - name: 'Upload code coverage'
#        run: 'bash <(curl -s https://codecov.io/bash)'
